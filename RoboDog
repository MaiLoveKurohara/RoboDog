
import sys
import time

sys.path.append('unitree_legged_sdk/lib/python/arm64')
import robot_interface as sdk

## comm.h

HIGHLEVEL = 0xee
LOWLEVEL  = 0xff

rate = 500 # 500hz
dt = 1.0 / rate # time between commands

def main():
    udp = sdk.UDP(HIGHLEVEL, 8080, "192.168.123.220", 8082)
    cmd = sdk.HighCmd()
    state = sdk.HighState()
    udp.InitCmdData(cmd)

  #  cmd = sdk.BmsCmd()
 #   state = sdk.BmsState()

#Reset all commands to 0 so if accidentally execute, nothing happens
    cmd.mode = 0
    cmd.gaitType = 0
    cmd.speedLevel = 0
    cmd.footRaiseHeight = 0
    cmd.bodyHeight = 0
    cmd.euler = [0, 0, 0]
    cmd.velocity = [0, 0]
    cmd.yawSpeed = 0.0
    cmd.reserve = 0

#     for i in range(2000):
#         udp.Recv()
#         udp.GetRecv(state)
#         print(state.bms.current)
#         udp.SetSend(cmd)
#         udp.Send()
#         time.sleep(dt)

    for i in range(int(4/dt)):
        cmd.mode = 6 #stand
        udp.SetSend(cmd)
        udp.Send() 
        time.sleep(dt)

    for i in range(int(4/dt)):
        cmd.mode = 1 #active stand
        cmd.euler = [0.0, 0.3, 0.0] #down
        udp.SetSend(cmd)
        udp.Send()	
        time.sleep(dt)	

    for i in range(int(4/dt)): # how many tics are in 2 seconds and loop tics for 4 seconds
        cmd.mode = 6 #"position stand down" send command code
        udp.SetSend(cmd) #take command and get ready to send to robot
        udp.Send() #send to robot
        time.sleep(dt) #sleep before next loop

    for i in range (int(4/dt)):
        cmd.mode = 5
        udp.SetSend(cmd)
        udp.Send()
        time.sleep(dt)




main()

